name: Github Actions SeaFile

on:
  push:
    branches: [ "main", "dev01" ]
  pull_request:
    branches: [ "main", "dev01" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-vue:
    name: 编译前端
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Node_Modules
        uses: actions/cache@v3
        with:
          path: webapp/node_modules
          key: node_modules-${{ github.ref_name }}
          restore-keys: SeaFile-Cache
      - name: Build Vue
        run: |
          cd webapp && yarn install && yarn build
          cd ../ && tar zcvf app.tar.gz dist
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: app.tar.gz
          path: app.tar.gz
  build-rust:
    name: 编译后端
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Target
        uses: actions/cache@v3
        with:
          path: target
          key: target-${{ github.ref_name }}
          restore-keys: SeaFile-Cache
      - name: Setup latest Alpine Linux
        uses: jirutka/setup-alpine@v1
      - name: Build Rust
        run: |
          cat /etc/os-release
          apk add musl-dev openssl-dev upx
          apk add rustup gcc build-base && rustup-init -y
#          curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf > rustup.sh && sh rustup.sh -y
          source "$HOME/.cargo/env"
          
          cargo build --release --verbose
          cp target/release/seafile .
          strip seafile && upx -9 seafile
          cp profiles/dev/* .
          tar zcvf app2.tar.gz seafile scripts config.yaml
#      - name: Build Rust
#        run: |
#          apt update
#          apt install -y openssl libssl-dev gcc
#          apt install -y curl musl-dev upx
#          curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf > rustup.sh && sh rustup.sh -y
#          source "$HOME/.cargo/env"
#          cargo build --release --verbose
#          cp target/release/seafile .
#          strip seafile && upx -9 seafile
#          cp profiles/dev/* .
#          tar zcvf app2.tar.gz seafile scripts config.yaml
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: app2.tar.gz
          path: app2.tar.gz
  build-image:
    name: 构建镜像
    runs-on: ubuntu-latest
    needs:
      - build-vue
      - build-rust
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v2
        with:
          name: app.tar.gz
          path: .
      - uses: actions/download-artifact@v2
        with:
          name: app2.tar.gz
          path: .
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Docker Build and Push
        run: |
          tar zxvf app.tar.gz
          tar zxvf app2.tar.gz
          rm -rf app.tar.gz app2.tar.gz
          tar zcvf app.tar.gz dist seafile scripts config.yaml
          mkdir -p docker
          cp .dockerfile app.tar.gz docker/ && cd docker
          docker build --pull -f .dockerfile -t abelco/seafile .
#          docker push abelco/seafile
